@mixin center-block($width: null) {
    margin-right: auto;
    margin-left: auto;

    @if $width {
        width: $width;
    }
}

@mixin caption($font-size: null, $line-height: null, $font-weight: null) {
    margin-top: 0;
    margin-bottom: $base-line-height;
    font-family: $ff-caption;

    @if $font-size {
        font-size: $font-size;
    }

    @if $line-height {
        line-height: $line-height;
    }

    @if $font-weight {
        font-weight: $font-weight;
    }
}

@mixin clearfix {
    &:after {
        clear: both;
        content: '';
        display: table;
    }
}

@mixin col($selector, $col, $gap: 0) {
    @include clearfix;
    margin-left: -$gap;

    #{$selector} {
        float: left;
        display: block;
        padding-left: $gap;
        width: 100%/$col;
        box-sizing: border-box;

        &:nth-of-type(#{$col}n+1) {
            clear: both;
        }

        &:nth-last-of-type(-n+#{$col}) {
            margin-bottom: 0;
        }
    }
}

@mixin show-only($count: 0) {
    &:not(:nth-of-type(-n+#{$count})) {
        display: none;
    }
}

@mixin fluid-column($width, $pos: left, $class: null) {
    width: 100%;

    @if $pos == left {
        float: left;
    } @else{
        float: right;
    }

    @if $class {
        #{$class} {
            @if $pos == left {
                margin-right: $width;
            } @else{
                margin-left: $width;
            }
        }
    } @else{
        & > * {
            @if $pos == left {
                margin-right: $width;
            } @else{
                margin-left: $width;
            }
        }
    }
}

@mixin fixed-column($width, $pos: right) {
    position: relative;
    width: $width;

    @if $pos == right {
        float: right;
        margin-left: -$width;
    } @else{
        float: left;
        margin-right: -$width;
    }
}

@mixin reset-fluid-column($pos: left, $class: null) {
    float: none;
    width: auto;

    @if $class {
        #{$class} {
            @if $pos == left {
                margin-right: 0;
            } @else{
                margin-left: 0;
            }
        }
    } @else{
        & > * {
            @if $pos == left {
                margin-right: 0;
            } @else{
                margin-left: 0;
            }
        }
    }
}

@mixin reset-fixed-column($pos: right) {
    float: none;
    width: auto;

    @if $pos == right {
        margin-left: 0;
    } @else{
        margin-right: 0;
    }
}


/* CONTENT
   ========================================================================= */
@mixin content-block {
    h1, h2, h3, h4, h5 {
        margin-bottom: $base-line-height;
    }

    h1 {
        @include caption($fz-h1, $base-line-height, $fw-h1);
    }

    h2 {
        @include caption($fz-h2, $base-line-height, $fw-h2);
    }

    h3 {
        @include caption($fz-h3, $base-line-height, $fw-h3);
    }

    h4 {
        @include caption($fz-h4, $base-line-height, $fw-h4);
    }

    h5 {
        @include caption($fz-h5, $base-line-height, $fw-h5);
    }

    a {
        @extend .normal_link;
    }

    p {
        margin-top: $base-line-height;
        margin-bottom: $base-line-height;
    }

    ul {
        @extend .clear-list;
        margin-top: $base-line-height;
        margin-bottom: $base-line-height;
        padding-left: $base-line-height*2;
        list-style-type: disc;
    }

    & > *:first-child {
        margin-top: 0;
    }

    & > *:last-child {
        margin-bottom: 0;
    }
}

@mixin content-block-sm {
    @include content-block;
    font-size: 14px;

    h1, h2, h3, h4, h5 {
        margin-bottom: $base-line-height/2;
    }

    p {
        margin-top: $base-line-height/2;
        margin-bottom: $base-line-height/2;
    }

    ul {
        margin-top: $base-line-height/2;
        margin-bottom: $base-line-height/2;
        padding-left: $base-line-height*1.5;
    }
}
/* ========================================================================= */
